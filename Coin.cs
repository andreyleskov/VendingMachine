//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

public class Coin
{
    public readonly Money Value;

    public readonly CoinGrade Grade;

    private static Dictionary<CoinGrade, Money> GradeValues = new Dictionary<CoinGrade, Money>();

    static Coin()
    {
        GradeValues[CoinGrade.One]  = new Money(Currency.Rub, 1);    
        GradeValues[CoinGrade.Two]  = new Money(Currency.Rub, 2);    
        GradeValues[CoinGrade.Five] = new Money(Currency.Rub, 5);    
        GradeValues[CoinGrade.Ten]  = new Money(Currency.Rub, 10);    
    }

    private Coin(Money money, CoinGrade grade)
    {
        Value = money;
        Grade = grade;
    }

    public static Coin Create(CoinGrade grade)
    {

        Money value;     
        if(GradeValues.TryGetValue(grade, out value))
            return new Coin(value, grade);
        throw new CantFindGradeValueException(grade);
	}

    public static Coin One() { return Coin.Create(CoinGrade.One); }
    public static Coin Two() { return Coin.Create(CoinGrade.Two); }
    public static Coin Five() { return Coin.Create(CoinGrade.Five); }
    public static Coin Ten() { return Coin.Create(CoinGrade.Ten); }
}


public class CantFindGradeValueException : Exception
{
    public CantFindGradeValueException(CoinGrade grade):base("Не удалось найти стоимость для монеты " + grade)
    {
        
    }
}


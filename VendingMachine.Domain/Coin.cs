//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VendingMachine.Domain
{
    public class Coin
    {
        public readonly Money Value;

        private Coin(Money money)
        {
            this.Value = money;
        }

        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }
            if (ReferenceEquals(this, obj))
            {
                return true;
            }
            if (obj.GetType() != this.GetType())
            {
                return false;
            }
            return Equals((Coin)obj);
        }

        protected bool Equals(Coin other)
        {
            return Equals(this.Value, other.Value);
        }

        public override int GetHashCode()
        {
            return (this.Value != null ? this.Value.GetHashCode() : 0);
        }

        public static bool operator  == (Coin a, Coin b)
        {
            return a.Equals(b);
        }

        public static bool operator !=(Coin a, Coin b)
        {
            return !(a == b);
        }

        public static Coin One()  { return new Coin(new Money(Currency.Rub, 100)); }
        public static Coin Two()  { return new Coin(new Money(Currency.Rub, 200)); }
        public static Coin Five() { return new Coin(new Money(Currency.Rub, 500)); }
        public static Coin Ten()  { return new Coin(new Money(Currency.Rub, 1000)); }
        
    }
}